from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import * 
from PyQt5.QtGui import * 
from wired_module import *
#	Generated By WiredQT for Python: by Rocky Nuarin, 2021 Phils
class Handler(QtWidgets.QWidget,usercontrol):
	def __init__(self, *param):    
		super(Handler, self).__init__(None)
		initUI(self,param,w=1366,h=768,title="WiredQT v1.0",controlbox=True,startpos=(0,30),timeoutdestroy=-1)
		self.GTKForms()
		self.timer=QtCore.QTimer()
		self.timer.timeout.connect(self.loop)
		self.timer.start(10)    
		self.sch=Scheduler(500)#500 ms
		self.sch.Start()


		import sqlite3
		self.db = sqlite3.connect('database.db')
		self.datagrid.DataSource(self.db,"select * from price limit 10")
		import DBUtils
		self.dbUtils=DBUtils.Initialize(self)

		self.dbUtils.PopulateCombo(self.cboSearch,"",'price',RETFIELDS=True)
		self.uniqueprice=[];self.notnullprice=[];self.autonumberprice=[];self.integerprice=[];self.floatingprice=[];
		self.dbUtils.SetAutoNumber(self.autonumberprice);
	def insertcode(self):
		if self.dbUtils.IsUnique(self.uniqueprice) and self.dbUtils.IsNotNull(self.notnullprice) and self.dbUtils.CheckNumber(self.integerprice,True) and self.dbUtils.CheckNumber(self.floatingprice) :
			self.datagrid.ExecuteNonQuerry(self.db,"INSERT INTO `price` (KWH)VALUES('%s')"%(self.txtKWH_price.Text))
			print("Success")
			self.datagrid.DataSource(self.db,"select * from price limit 10")

			self.dbUtils.IncAutoNumber(self.autonumberprice)
			self.dbUtils.SetAutoNumber(self.autonumberprice);#$		self.datagrid.ExecuteNonQuerry(self.db,"INSERT INTO `price` (KWH)VALUES('${txtKWH_price.Text}'"$)
	def btninsert_price_clicked(self,wid):
		self.insertcode()
		pass
	def btndelete_price_clicked(self,wid):
		self.datagrid.ExecuteNonQuerry(self.db,"DELETE FROM `price`  WHERE KWH='%s'" % self.txtKWH_price.Text)
		self.datagrid.DataSource(self.db,"select * from price limit 10")
		pass
	def btnupdate_price_clicked(self,wid):
		self.datagrid.ExecuteNonQuerry(self.db,"UPDATE `price` SET KWH='%s' WHERE KWH='%s'" % (self.txtKWH_price.Text,self.txtKWH_price.Text))
		self.datagrid.DataSource(self.db,"select * from price limit 10")#$self.datagrid.ExecuteNonQuerry(self.db,"UPDATE `price` SET KWH='${txtKWH_price.Text}' WHERE KWH='${txtKWH_price.Text}"$)
		pass
	def datagrid_clicked(self,arg1):
		rowdata=arg1.model()._data[arg1.row()]
		self.dbUtils.TableValToUserInput("price",rowdata)
		pass

	def txtSearch_textChanged(self,arg1):
		if self.cboSearch.Text!="Select Here":
			self.datagrid.DataSource(self.db,"select * from price where %s like '%s" % (self.cboSearch.Text,self.txtSearch.Text) +"%'" )
		pass

	def activeXcreated(self,*args):
		pass		
	def loop(self):
		if self.form_load==False:
			self.form_load=True
		if self.sch.Event():#timer routine
			#code here
			if self.timeoutdestroy!=-1:
				self.timeoutdestroy-=1
				if self.timeoutdestroy==0:
					self.unload(None)
			self.sch.Start()#restart scheduler
		return True	#return true so that main_loop can call it again 
	def connect(self,ev,evusr):
		self.wiredevents.update({ev:evusr})	
	@property
	def Text(self):
		return ''
	@Text.setter
	def Text(self,value):
		pass
	def createwidget(self,prop,control,parent,event=[]):
		createWidget(self,prop,control,parent,event)
	def GTKForms(self):
		self.createwidget("{'Var': '', 'Help': '', 'Height': '130', 'Events': '[]', 'Name': 'datagrid', 'Visible': 'True', 'Tag': 'Activex', 'ForeColor': '(0,0,0,1)', 'Top': '50', 'Enable': 'True', 'Picture': '', 'Text': 'Entry1', 'Left': '339', 'Width': '500', 'Font': '', 'ParentsType': '', 'BackColor': '(1,1,1,1)', 'dbtype': 'sqllite'}","DataGrid","usercontrol","[['clicked', 'self,model']]")
		self.createwidget("{'Name': 'mBase', 'Var': '', 'Font': '', 'Enable': 'True', 'Top': '220', 'Width': '100', 'ParentsType': '', 'Picture': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'BackColor': '(1,1,1,0.25)', 'Events': [], 'Height': '30', 'Left': '305', 'Tag': '', 'Text': 'mBase', 'Help': ''}",'QLabel','usercontrol',"[]")
		self.createwidget("{'Var': '', 'Help': '', 'Height': '40', 'Events': '[]', 'Name': 'txtSearch', 'Visible': 'True', 'Tag': '', 'ForeColor': '(0,0,0,1)', 'Top': '0', 'Enable': 'True', 'Picture': '', 'Text': 'Entry1', 'Left': '500', 'Width': '150', 'Font': '', 'ParentsType': '', 'BackColor': '(1,1,1,1)'}","QLineEdit","usercontrol","[['txtSearch_textChanged', 'self,arg1']]")
		self.createwidget("{'Var': '', 'Help': '', 'Height': '30', 'Events': '[]', 'Name': 'cboSearch', 'Visible': 'True', 'Tag': '', 'ForeColor': '(0,0,0,1)', 'Top': '5', 'Enable': 'True', 'Picture': '', 'Text': 'Entry1', 'Left': '650', 'Width': '150', 'Font': '', 'ParentsType': '', 'BackColor': '(1,1,1,1)'}","QComboBox","usercontrol","[]")
		self.createwidget("{'Var': '', 'Help': '', 'Height': '20', 'Events': '[]', 'Name': 'lblKWH_price', 'Visible': 'True', 'Tag': '', 'ForeColor': '(0,0,0,1)', 'Top': '0', 'Enable': 'True', 'Picture': '', 'Text': 'KWH', 'Left': '0', 'Width': '170', 'Font': '', 'ParentsType': '', 'BackColor': '(1,1,1,1)'}","QLabel","usercontrol","[]")
		self.createwidget("{'Var': '', 'Help': '', 'BackColor': '(0, 0.563668817126555, 0.41624087056517534, 0.5)', 'Events': '[]', 'Top': '0', 'Text': 'KWH', 'Enable': 'True', 'Width': '112', 'Tag': '', 'Visible': 'True', 'ForeColor': '(0,0,0,1)', 'Picture': 'richEntry.png', 'MaxChar': '100', 'ParentsType': '', 'Input': 'STRING', 'Alignment': 'LEFT', 'Left': '170', 'Height': '40', 'Font': '', 'Name': 'txtKWH_price'}","QLineEdit","usercontrol","[]")
		self.createwidget("{'Var': '', 'Help': '', 'Height': '20', 'Events': '[]', 'Name': 'btnok_price', 'Visible': 'True', 'Tag': '', 'ForeColor': '(0,0,0,1)', 'Top': '30', 'Enable': 'True', 'Picture': '', 'Text': 'ok', 'Left': '0', 'Width': '170', 'Font': '', 'ParentsType': '', 'BackColor': '(1,1,1,1)'}","QPushButton","usercontrol","[['clicked', 'self,e']]")
		self.createwidget("{'Var': '', 'Help': '', 'Height': '20', 'Events': '[]', 'Name': 'btncancel_price', 'Visible': 'True', 'Tag': '', 'ForeColor': '(0,0,0,1)', 'Top': '30', 'Enable': 'True', 'Picture': '', 'Text': 'cancel', 'Left': '170', 'Width': '170', 'Font': '', 'ParentsType': '', 'BackColor': '(1,1,1,1)'}","QPushButton","usercontrol","[['clicked', 'self,e']]")
		self.createwidget("{'Var': '', 'Help': '', 'Height': '20', 'Events': '[]', 'Name': 'btninsert_price', 'Visible': 'True', 'Tag': '', 'ForeColor': '(0,0,0,1)', 'Top': '30', 'Enable': 'True', 'Picture': '', 'Text': 'insert', 'Left': '340', 'Width': '170', 'Font': '', 'ParentsType': '', 'BackColor': '(1,1,1,1)'}","QPushButton","usercontrol","[['clicked', 'self,e']]")
		self.createwidget("{'Var': '', 'Help': '', 'Height': '20', 'Events': '[]', 'Name': 'btndelete_price', 'Visible': 'True', 'Tag': '', 'ForeColor': '(0,0,0,1)', 'Top': '30', 'Enable': 'True', 'Picture': '', 'Text': 'delete', 'Left': '510', 'Width': '170', 'Font': '', 'ParentsType': '', 'BackColor': '(1,1,1,1)'}","QPushButton","usercontrol","[['clicked', 'self,e']]")
		self.createwidget("{'Var': '', 'Help': '', 'Height': '20', 'Events': '[]', 'Name': 'btnupdate_price', 'Visible': 'True', 'Tag': '', 'ForeColor': '(0,0,0,1)', 'Top': '30', 'Enable': 'True', 'Picture': '', 'Text': 'update', 'Left': '680', 'Width': '170', 'Font': '', 'ParentsType': '', 'BackColor': '(1,1,1,1)'}","QPushButton","usercontrol","[['clicked', 'self,e']]")
	def Widget(self):
		return self

if __name__ == '__main__':
	import sys
	app = QtWidgets.QApplication(sys.argv)
	w = Handler()
	w.show()
	sys.exit(app.exec_())